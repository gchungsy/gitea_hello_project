name: FortiGate Automation Tests

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  fortigate-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: ["6.2", "6.4", "7.0", "7.2", "7.4"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install govc
        run: |
          curl -L https://github.com/vmware/govmomi/releases/latest/download/govc_Linux_x86_64.tar.gz \
          | tar -C /usr/local/bin -xvzf - govc
          chmod +x /usr/local/bin/govc

      - name: Configure govc
        env:
          GOVC_URL: ${{ secrets.VSPHERE_SERVER }}
          GOVC_USERNAME: ${{ secrets.VSPHERE_USER }}
          GOVC_PASSWORD: ${{ secrets.VSPHERE_PASS }}
          GOVC_INSECURE: 1
        run: |
          govc about

      - name: Deploy FortiGate OVA (v${{ matrix.version }})
        env:
          GOVC_URL: ${{ secrets.VSPHERE_SERVER }}
          GOVC_USERNAME: ${{ secrets.VSPHERE_USER }}
          GOVC_PASSWORD: ${{ secrets.VSPHERE_PASS }}
          GOVC_INSECURE: 1
        run: |
          VM_NAME=fortigate-${{ matrix.version }}
          OVA_PATH=fortigate-${{ matrix.version }}.ova   # You need to provide/upload OVA
          govc import.ova -name $VM_NAME $OVA_PATH
          govc vm.power -on $VM_NAME

          # Wait until guest IP is available
          IP=$(govc vm.ip -wait=10m $VM_NAME)
          echo "FORTIGATE_IP=$IP" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests against FortiGate ${{ matrix.version }}
        env:
          FORTIGATE_VERSION: ${{ matrix.version }}
          FORTIGATE_HOST: ${{ env.FORTIGATE_IP }}
          FORTIGATE_USER: ${{ secrets.FORTIGATE_USER }}
          FORTIGATE_PASS: ${{ secrets.FORTIGATE_PASS }}
        run: |
          pytest tests/ \
            --fortigate-version=$FORTIGATE_VERSION \
            --fortigate-host=$FORTIGATE_HOST \
            --fortigate-user=$FORTIGATE_USER \
            --fortigate-pass=$FORTIGATE_PASS \
            --junitxml=reports/report-${FORTIGATE_VERSION}.xml

      - name: Upload report for FortiGate ${{ matrix.version }}
        uses: actions/upload-artifact@v4
        with:
          name: fortigate-${{ matrix.version }}-report
          path: reports/report-${{ matrix.version }}.xml

      - name: Cleanup FortiGate VM
        if: always()
        env:
          GOVC_URL: ${{ secrets.VSPHERE_SERVER }}
          GOVC_USERNAME: ${{ secrets.VSPHERE_USER }}
          GOVC_PASSWORD: ${{ secrets.VSPHERE_PASS }}
          GOVC_INSECURE: 1
        run: |
          VM_NAME=fortigate-${{ matrix.version }}
          govc vm.power -off $VM_NAME || true
          govc vm.destroy $VM_NAME || true
